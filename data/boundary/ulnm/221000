cpu time: 624 real time: 624 gc time: 156
Running time is 11.72% contracts
304/2594 ms

("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/main.rkt" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/no-gui/plot2d.rkt" "<pkgs>/pict-lib/pict/main.rkt:99:3")
  261.5 ms
  (->i ((draw (-> (is-a?/c dc<%>) real? real? any)) (w real?) (h real?)) ((d (or/c #f real?)) (a (or/c #f real?))) #:pre/name (draw) draw proc does not restore the dc state after being called (... draw) (p pict?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/statistics/expected-values.rkt" "/users/ben_g/ulnm/cfg/summary.rkt" "(lib math/private/statistics/expected-values.rkt):19:9")
  6.5 ms
  (->* ((or/c natural? (sequence/c real?))) ((or/c #f (or/c natural? (sequence/c real?)))) any)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/private/utils.rkt" "no-negative-party" "<pkgs>/pict-lib/pict/private/utils.rkt:173:4")
  6.5 ms
  (->i ((width positive?) (height positive?)) (#:left-ear-extent (left-ear-extent (>=/c 0)) #:left-ear-arc (left-ear-arc (real-in 0 6.283185307179586)) #:left-ear-angle (left-ear-angle (real-in 0 6.283185307179586)) #:right-ear-extent (right-ear-extent (>=/c 0)) #:right-ear-arc (right-ear-arc (real-in 0 6.283185307179586)) #:right-ear-angle (right-ear-angle (real-in 0 6.283185307179586)) #:fur-color (fur-color (or/c #f string? (is-a?/c color%))) #:fur-border-color (fur-border-color (or/c #f string? (is-a?/c color%))) #:lip-color (lip-color (or/c #f string? (is-a?/c color%))) #:lip-border-color (lip-border-color (or/c string? (is-a?/c color%))) #:lip-border-width (lip-border-width (or/c #f (real-in 0 255))) #:eye-color (eye-color (or/c #f string? (is-a?/c color%))) #:nose-color (nose-color (or/c #f string? (is-a?/c color%))) #:nose (nose pict?) #:happy? (happy? any/c) #:eyes (eyes (or/c #f pict?)) #:left-eye (left-eye (eyes) (if eyes (or/c #f pict?) pict?)) #:right-eye (right-eye (eyes) (if eyes (or/c #f pict?) pict?)) #:whisker-length (whisker-length positive?) #:whisker-droop (whisker-droop real?) #:whisker-width (whisker-width (or/c #f (real-in 0 255))) #:whisker-color (whisker-color (or/c string? (is-a?/c color%))) #:whisker-inset? (whisker-inset? any/c) #:border-width (border-width (or/c #f (real-in 0 255)))) #:pre/desc (left-ear-arc left-ear-angle right-ear-arc right-ear-angle) (ear-positioning-errors left-ear-arc left-ear-angle right-ear-arc right-ear-angle) (_ pict?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/draw-lib/racket/draw.rkt" "no-negative-party" "<pkgs>/draw-lib/racket/draw.rkt:94:19")
  6.5 ms
  region%/c
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/common/ticks.rkt" "no-negative-party" "(lib plot/private/common/ticks.rkt):668:9")
  6 ms
  (->* () (#:formats (list/c string? string? string?) #:kind (or/c string? symbol?) #:number (and/c exact-integer? positive?) #:scales (listof string?)) any)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/draw-lib/racket/draw.rkt" "no-negative-party" "<pkgs>/draw-lib/racket/draw.rkt:95:19")
  6 ms
  dc-path%/c
("(interface for bigfloat->real)" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/bigfloat/bigfloat-mpfr.rkt" "<pkgs>/math-lib/math/private/bigfloat/bigfloat-mpfr.rkt:30:2")
  5.5 ms
  (-> any/c (or/c (and/c flonum? negative?) (and/c flonum? positive?) g204 g205 (and/c flonum? ...eric-base-types.rkt:143:20) (and/c exact-rational? negative? (not/c integer?)) (and/c exact-rational? positive? (not/c integer?)) (and/c exact-integer? negative? (not/c fixnum?)) (and/c exact-integer? positive? (not/c fixnum?)) (and/c fixnum? negative?) (and/c fixnum? positive? (not/c index?)) (and/c index? positive? (not/c byte?)) g214 1 0))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/racket/dict.rkt" "no-negative-party" "<collects>/racket/dict.rkt:166:2")
  5.5 ms
  (struct-type-property/c (list/c (vector/c (->i ((d dict?) (k (d) (dict-key-contract d))) ((default any/c)) any) (or/c #f (->i ((d (dict-implements/c dict-set!)) (k (d) (dict-key-contract d)) (value (d) (dict-value-contract d))) (_r void?))) (or/c #f (->i ((d (dict-implements/c dict-set)) (k (d) (dict-key-contract d)) (value (d) (dict-value-contract d))) (_r dict?))) (or/c #f (->i ((d (dict-implements/c dict-remove!)) (k (d) (dict-key-contract d))) (_r void?))) (or/c #f (->i ((d (dict-implements/c dict-remove)) (k (d) (dict-key-contract d))) (_r dict?))) (-> dict? natural?) (->i ((d dict?)) (_r (d) (or/c #f (dict-iter-contract d)))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (or/c #f (dict-iter-contract d)))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (dict-key-contract d))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (dict-value-contract d))) #:immutable #t) (vector/c contract? contract? contract? (or/c #f (-> dict? contract?)) (or/c #f (-> dict? contract?)) (or/c #f (-> dict? contract?)) #:immutable #t)))
