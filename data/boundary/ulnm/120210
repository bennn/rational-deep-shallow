cpu time: 592 real time: 592 gc time: 131
Running time is 13.24% contracts
323/2440 ms

("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/main.rkt" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/no-gui/plot2d.rkt" "pict-lib/pict/main.rkt:99:3")
  204.5 ms
  (->i ((draw (-> (is-a?/c dc<%>) real? real? any)) (w real?) (h real?)) ((d (or/c #f real?)) (a (or/c #f real?))) #:pre/name (draw) draw proc does not restore the dc state after being called (... draw) (p pict?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/statistics/expected-values.rkt" "/users/ben_g/ulnm/cfg/summary.rkt" "(lib math/private/statistics/expected-values.rkt):19:9")
  76.5 ms
  (->* ((or/c natural? (sequence/c real?))) ((or/c #f (or/c natural? (sequence/c real?)))) any)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/draw-lib/racket/draw.rkt" "no-negative-party" "draw-lib/racket/draw.rkt:87:19")
  12 ms
  bitmap-dc%/c
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/common/parameters.rkt" "no-negative-party" "(lib plot/private/common/parameters.rkt):135:8")
  7.5 ms
  (object/c-opaque (copy-from (-> any/c (recursive-contract (object/c-opaque (copy-from (-> any/c (recursive-contract g908 #:impersonator) (and/c any/c Any) void?)) (get-command (-> any/c string?)) (get-editor-margin (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-file (-> any/c (or/c path? string? #f))) (get-level-2 (-> any/c boolean?)) (get-margin (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-mode (-> any/c (or/c (quote preview) (quote file) (quote printer)))) (get-orientation (-> any/c (or/c (quote portrait) (quote landscape)))) (get-paper-name (-> any/c string?)) (get-preview-command (-> any/c string?)) (get-scaling (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-translation (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (set-command (-> any/c string? void?)) (set-editor-margin (-> any/c natural? natural? void?)) (set-file (-> any/c (or/c path? string? #f) void?)) (set-level-2 (-> any/c (and/c any/c Any) void?)) (set-margin (-> any/c (and/c real? nonnegative?) (and/c real? nonnegative?) void?)) (set-mode (-> any/c (or/c (quote preview) (quote file) (quote printer)) void?)) (set-orientation (-> any/c (or/c (quote portrait) (quote landscape)) void?)) (set-paper-name (-> any/c string? void?)) (set-preview-command (-> any/c string? void?)) (set-scaling (-> any/c (and/c real? nonnegative?) (and/c real? nonnegative?) void?)) (set-translation (-> any/c real? real? void?))) #:impersonator) any/c void?)) (get-command (-> any/c string?)) (get-editor-margin (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-file (-> any/c (or/c path? string? #f))) (get-level-2 (-> any/c boolean?)) (get-margin (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-mode (-> any/c (or/c (quote preview) (quote file) (quote printer)))) (get-orientation (-> any/c (or/c (quote portrait) (quote landscape)))) (get-paper-name (-> any/c string?)) (get-preview-command (-> any/c string?)) (get-scaling (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-translation (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (set-command (-> any/c string? void?)) (set-editor-margin (-> any/c natural? natural? void?)) (set-file (-> any/c (or/c path? string? #f) void?)) (set-level-2 (-> any/c any/c void?)) (set-margin (-> any/c (and/c real? nonnegative?) (and/c real? nonnegative?) void?)) (set-mode (-> any/c (or/c (quote preview) (quote file) (quote printer)) void?)) (set-orientation (-> any/c (or/c (quote portrait) (quote landscape)) void?)) (set-paper-name (-> any/c string? void?)) (set-preview-command (-> any/c string? void?)) (set-scaling (-> any/c (and/c real? nonnegative?) (and/c real? nonnegative?) void?)) (set-translation (-> any/c real? real? void?)))
("(class bitmap-dc%)" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/main.rkt" "#<blame-no-swap>")
  6 ms
  (->*m (string?) ((or/c (is-a?/c font%) #f) any/c natural?) (values (and/c real? (not/c negative?)) (and/c real? (not/c negative?)) (and/c real? (not/c negative?)) (and/c real? (not/c negative?))))
("(class bitmap-dc%)" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/private/pict.rkt" "#<blame-no-swap>")
  6 ms
  (->m (and/c real? (not/c negative?)))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/array/typed-array-struct.rkt" "no-negative-party" "(lib math/private/array/typed-array-struct.rkt):49:13")
  5.5 ms
  (-> (struct/c Array (vectorof index?) index? (box/c boolean?) (-> void?) (-> (vectorof index?) any/c)) any)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/db-lib/db/main.rkt" "no-negative-party" "db-lib/db/main.rkt:82:2")
  5 ms
  (->* (#:database (or/c path-string? (quote memory) (quote temporary))) (#:busy-retry-delay (and/c rational? (not/c negative?)) #:busy-retry-limit (or/c natural? +inf.0) #:debug? any/c #:mode (or/c (quote read-only) (quote read/write) (quote create)) #:use-place (or/c boolean? (quote place) (quote os-thread))) connection?)
