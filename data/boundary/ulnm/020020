cpu time: 592 real time: 592 gc time: 131
Running time is 16.88% contracts
416/2465 ms

("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/main.rkt" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/no-gui/plot2d.rkt" "<pkgs>/pict-lib/pict/main.rkt:99:3")
  269 ms
  (->i ((draw (-> (is-a?/c dc<%>) real? real? any)) (w real?) (h real?)) ((d (or/c #f real?)) (a (or/c #f real?))) #:pre/name (draw) draw proc does not restore the dc state after being called (... draw) (p pict?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/array/typed-array-struct.rkt" "no-negative-party" "(lib math/private/array/typed-array-struct.rkt):49:13")
  72 ms
  (-> (vectorof index?) index? (box/c boolean?) (-> void?) (-> (vectorof index?) any/c) (struct/c Array (vectorof index?) any/c (box/c boolean?) any/c (-> (vectorof index?) any)))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/statistics/expected-values.rkt" "/users/ben_g/ulnm/cfg/summary.rkt" "(lib math/private/statistics/expected-values.rkt):19:9")
  52.5 ms
  (->* ((or/c natural? (sequence/c real?))) ((or/c #f (or/c natural? (sequence/c real?)))) any)
("(interface for summary?)" "/users/ben_g/ulnm/cfg/summary-adapted.rkt" "summary-adapted.rkt")
  10.5 ms
  (or/c struct-predicate-procedure?/c (-> Any boolean?))
("(interface for -1.bf)" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/bigfloat/bigfloat-constants.rkt" "<pkgs>/math-lib/math/private/bigfloat/mpfr.rkt:1006:20")
  6.5 ms
  (and/c (promise/c ^TYPE?) (not/c promise/name?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/draw-lib/racket/draw.rkt" "no-negative-party" "<pkgs>/draw-lib/racket/draw.rkt:54:11")
  5.5 ms
  (->* ((or/c path-string? input-port?)) ((or/c (quote unknown) (quote unknown/mask) (quote unknown/alpha) (quote gif) (quote gif/mask) (quote gif/alpha) (quote jpeg) (quote jpeg/alpha) (quote png) (quote png/mask) (quote png/alpha) (quote xbm) (quote xbm/alpha) (quote xpm) (quote xpm/alpha) (quote bmp) (quote bmp/alpha)) (or/c (is-a?/c color%) #f) any/c #:backing-scale (>/c 0.0) #:save-data-from-file? any/c #:try-@2x? any/c) (instanceof/c bitmap%/c))
