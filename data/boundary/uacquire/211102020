cpu time: 1512 real time: 1512 gc time: 288
Running time is 0.41% contracts
9/2194 ms

("(/users/ben_g/uacquire/cfg/tree-adapted.rkt admin)" "(interface for tree-state)" "tree-adapted.rkt:74:5")
  3 ms
  (-> (recursive-contract (object/c-opaque (founding (-> any/c natural? (listof (listof string?)) natural?)) (lookup-tile (-> any/c (-> (listof tile?) tile?) (listof hand-out?) (values (or/c #f tile?) g11))) (merging (-> any/c natural? (listof (listof string?)) natural?)) (next (-> any/c tile? (or/c string? #f) (listof (list/c player? (listof (list/c string? boolean?)))) (listof string?) (-> (listof tile?) tile?) (values (or/c #f tile?) g11))) (nothing-to-place? (-> any/c boolean?)) (to-state (-> any/c state?)) (traversal (-> any/c natural? (listof (listof string?)) (-> (recursive-contract g41 #:impersonator) natural?) natural?)) (field (state state?))) #:impersonator) state?)
("(/users/ben_g/uacquire/cfg/tree-adapted.rkt admin)" "(interface for tree-next)" "tree-adapted.rkt:73:5")
  3 ms
  (-> (recursive-contract (object/c-opaque (founding (-> any/c natural? (listof (listof string?)) natural?)) (lookup-tile (-> any/c (-> (listof tile?) tile?) (listof hand-out?) (values (or/c #f tile?) g11))) (merging (-> any/c natural? (listof (listof string?)) natural?)) (next (-> any/c tile? (or/c string? #f) (listof (list/c player? (listof (list/c string? boolean?)))) (listof string?) (-> (listof tile?) tile?) (values (or/c #f tile?) g11))) (nothing-to-place? (-> any/c boolean?)) (to-state (-> any/c state?)) (traversal (-> any/c natural? (listof (listof string?)) (-> (recursive-contract g41 #:impersonator) natural?) natural?)) (field (state state?))) #:impersonator) any/c any/c any/c any/c (-> (listof tile?) any) (values (or/c #f tile?) (recursive-contract (object/c-opaque (founding (-> any/c natural? (listof (listof string?)) natural?)) (lookup-tile (-> any/c (-> (listof tile?) tile?) (listof hand-out?) (values (or/c #f tile?) (recursive-contract (object/c (founding (-> any/c natural? (listof (listof string?)) natural?)) (lookup-tile (-> any/c (-> (listof tile?) tile?) (listof hand-out?) (values (or/c #f tile?) (recursive-contract g72 #:impersonator)))) (merging (-> any/c natural? (listof (listof string?)) natural?)) (next (-> any/c tile? (or/c string? #f) (listof (list/c player? (listof (list/c string? boolean?)))) (listof string?) (-> (listof tile?) tile?) (values (or/c #f tile?) (recursive-contract g72 #:impersonator)))) (nothing-to-place? (-> any/c boolean?)) (to-state (-> any/c state?)) (traversal (-> any/c natural? (listof (listof string?)) (-> (recursive-contract g46 #:impersonator) natural?) natural?)) (field (state state?))) #:impersonator)))) (merging (-> any/c natural? (listof (listof string?)) natural?)) (next (-> any/c tile? (or/c string? #f) (listof (list/c player? (listof (list/c string? boolean?)))) (listof string?) (-> (listof tile?) tile?) (values (or/c #f tile?) (recursive-contract (object/c (founding (-> any/c natural? (listof (listof string?)) natural?)) (lookup-tile (-> any/c (-> (listof tile?) tile?) (listof hand-out?) (values (or/c #f tile?) (recursive-contract g72 #:impersonator)))) (merging (-> any/c natural? (listof (listof string?)) natural?)) (next (-> any/c tile? (or/c string? #f) (listof (list/c player? (listof (list/c string? boolean?)))) (listof string?) (-> (listof tile?) tile?) (values (or/c #f tile?) (recursive-contract g72 #:impersonator)))) (nothing-to-place? (-> any/c boolean?)) (to-state (-> any/c state?)) (traversal (-> any/c natural? (listof (listof string?)) (-> (recursive-contract g46 #:impersonator) natural?) natural?)) (field (state state?))) #:impersonator)))) (nothing-to-place? (-> any/c boolean?)) (to-state (-> any/c state?)) (traversal (-> any/c natural? (listof (listof string?)) (-> (recursive-contract (object/c (acceptable-policies (-> any/c (listof (listof string?)) (listof (listof string?)))) (purchase (-> any/c (listof (list/c player? (listof (list/c string? boolean?)))) (listof string?) (or/c (recursive-contract g72 #:impersonator) (listof hand-out?)))) (to-trees (-> any/c (listof (list/c player? (listof (list/c string? boolean?)))) (listof string?) (listof (recursive-contract g72 #:impersonator)))) (field (hotel (or/c string? #f)) (reason (or/c (quote FOUNDING) (quote GROWING) (quote MERGING) (quote SINGLETON) (quote IMPOSSIBLE))) (state state?) (state/tile state?) (tile tile?))) #:impersonator) natural?) natural?)) (field (state state?))) #:impersonator)))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/syntax/id-set.rkt" "no-negative-party" "(lib syntax/id-set.rkt)")
  3 ms
  (->* () (generic-set? #:phase (or/c #f exact-integer?)) immutable-bound-id-set?)
