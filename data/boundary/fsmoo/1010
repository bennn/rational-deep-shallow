cpu time: 765 real time: 765 gc time: 47
Running time is 1.87% contracts
22/1149 ms

("/users/ben_g/bnd-bench/fsmoo/cfg/main.rkt" "/users/ben_g/bnd-bench/fsmoo/cfg/population.rkt" "population.rkt:59:9")
  10.5 ms
  (-> natural? (object/c-opaque (death-birth (->* (any/c natural?) (#:random (or/c (and/c real? nonnegative?) #f)) void?)) (match-up* (-> any/c natural? void?)) (payoffs (-> any/c (listof (and/c real? nonnegative?)))) (field (a* (vectorof (recursive-contract (object/c (clone (-> any/c (recursive-contract g79 #:impersonator))) (equal (-> any/c (recursive-contract g80 #:impersonator) boolean?)) (jump (-> any/c natural? (and/c real? nonnegative?) void?)) (match-pair (-> any/c (recursive-contract g80 #:impersonator) natural? (values (recursive-contract g79 #:impersonator) (recursive-contract g79 #:impersonator)))) (pay (-> any/c (and/c real? nonnegative?))) (reset (-> any/c (recursive-contract g79 #:impersonator))) (field (current natural?) (original natural?) (payoff (and/c real? nonnegative?)) (table (vectorof (vectorof natural?))))) #:impersonator))) (b* (vectorof (recursive-contract (object/c (clone (-> any/c (recursive-contract g79 #:impersonator))) (equal (-> any/c (recursive-contract g80 #:impersonator) boolean?)) (jump (-> any/c natural? (and/c real? nonnegative?) void?)) (match-pair (-> any/c (recursive-contract g80 #:impersonator) natural? (values (recursive-contract g79 #:impersonator) (recursive-contract g79 #:impersonator)))) (pay (-> any/c (and/c real? nonnegative?))) (reset (-> any/c (recursive-contract g79 #:impersonator))) (field (current natural?) (original natural?) (payoff (and/c real? nonnegative?)) (table (vectorof (vectorof natural?))))) #:impersonator))))))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/syntax/parse/experimental/contract.rkt" "no-negative-party" "<collects>/syntax/parse/experimental/provide.rkt:94:18")
  5.5 ms
  (syntax-class/c (syntax?) (#:arg? any/c #:positive (or/c syntax? string? module-path-index? (quote from-macro) (quote use-site) (quote unknown)) #:negative (or/c syntax? string? module-path-index? (quote from-macro) (quote use-site) (quote unknown)) #:name (or/c identifier? string? symbol? #f) #:macro (or/c identifier? string? symbol? #f) #:context (or/c syntax? #f) #:phase exact-integer?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/racket/dict.rkt" "no-negative-party" "<collects>/racket/dict.rkt:229:2")
  5.5 ms
  (->i ((d (dict-implements/c dict-remove)) (k (d) (dict-key-contract d))) (_r dict?))
