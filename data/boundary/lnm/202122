cpu time: 669 real time: 669 gc time: 135
Running time is 16.78% contracts
434/2587 ms

("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/main.rkt" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/no-gui/plot2d.rkt" "pict-lib/pict/main.rkt:99:3")
  231.5 ms
  (->i ((draw (-> (is-a?/c dc<%>) real? real? any)) (w real?) (h real?)) ((d (or/c #f real?)) (a (or/c #f real?))) #:pre/name (draw) draw proc does not restore the dc state after being called (... draw) (p pict?))
("/users/ben_g/bnd-bench/lnm/cfg/summary.rkt" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/statistics/expected-values.rkt" "(lib math/private/statistics/expected-values.rkt):19:9")
  87 ms
  (->* ((or/c natural? (sequence/c real?))) ((or/c #f (or/c natural? (sequence/c real?)))) any)
("(class bitmap-dc%)" "/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/main.rkt" "#<blame-no-swap>")
  64 ms
  (->*m (string?) ((or/c (is-a?/c font%) #f) any/c natural?) (values (and/c real? (not/c negative?)) (and/c real? (not/c negative?)) (and/c real? (not/c negative?)) (and/c real? (not/c negative?))))
  (->m void?)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/array/array-broadcast.rkt" "no-negative-party" "(lib math/private/array/array-broadcast.rkt):42:9")
  8.5 ms
  (-> (struct/c Array (vectorof index?) index? (box/c boolean?) (-> void?) (-> (vectorof index?) any/c)) (vectorof index?) (struct/c Array (vectorof index?) any/c (box/c boolean?) any/c (-> (vectorof index?) any)))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/plot2d/line.rkt" "no-negative-party" "(lib plot/private/plot2d/line.rkt):346:9")
  8 ms
  (->* ((or/c natural? (sequence/c real?))) ((and/c real? nonnegative?) (or/c #f (or/c natural? (sequence/c real?))) #:alpha (and/c real? nonnegative?) #:color (or/c string? symbol? (and/c exact-integer? negative? (not/c fixnum?)) (and/c exact-integer? positive? (not/c fixnum?)) (and/c fixnum? negative?) (and/c fixnum? positive? (not/c index?)) (and/c index? positive? (not/c byte?)) g430 1 0 (recursive-contract g458 #:impersonator) (list/c real? real? real?)) #:label (or/c string? #f pict?) #:samples (and/c exact-integer? positive?) #:style (or/c (and/c exact-integer? negative? (not/c fixnum?)) (and/c exact-integer? positive? (not/c fixnum?)) (and/c fixnum? negative?) (and/c fixnum? positive? (not/c index?)) (and/c index? positive? (not/c byte?)) g430 1 0 (quote transparent) (quote solid) (quote dot) (quote long-dash) (quote short-dash) (quote dot-dash)) #:width (and/c real? nonnegative?) #:x-max (or/c real? #f) #:x-min (or/c real? #f) #:y-max (or/c real? #f) #:y-min (or/c real? #f)) any)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/math-lib/math/private/array/typed-array-struct.rkt" "no-negative-party" "(lib math/private/array/typed-array-struct.rkt):172:13")
  6.5 ms
  (-> (struct/c Settable-Array (vectorof index?) index? (box/c boolean?) (-> void?) (-> (vectorof index?) any/c) (-> (vectorof index?) any/c void?)) (-> (vectorof index?) any/c any))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/common/parameters.rkt" "no-negative-party" "(lib plot/private/common/parameters.rkt):135:8")
  6 ms
  (object/c-opaque (copy-from (-> any/c (recursive-contract (object/c-opaque (copy-from (-> any/c (recursive-contract g908 #:impersonator) (and/c any/c Any) void?)) (get-command (-> any/c string?)) (get-editor-margin (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-file (-> any/c (or/c path? string? #f))) (get-level-2 (-> any/c boolean?)) (get-margin (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-mode (-> any/c (or/c (quote preview) (quote file) (quote printer)))) (get-orientation (-> any/c (or/c (quote portrait) (quote landscape)))) (get-paper-name (-> any/c string?)) (get-preview-command (-> any/c string?)) (get-scaling (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-translation (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (set-command (-> any/c string? void?)) (set-editor-margin (-> any/c natural? natural? void?)) (set-file (-> any/c (or/c path? string? #f) void?)) (set-level-2 (-> any/c (and/c any/c Any) void?)) (set-margin (-> any/c (and/c real? nonnegative?) (and/c real? nonnegative?) void?)) (set-mode (-> any/c (or/c (quote preview) (quote file) (quote printer)) void?)) (set-orientation (-> any/c (or/c (quote portrait) (quote landscape)) void?)) (set-paper-name (-> any/c string? void?)) (set-preview-command (-> any/c string? void?)) (set-scaling (-> any/c (and/c real? nonnegative?) (and/c real? nonnegative?) void?)) (set-translation (-> any/c real? real? void?))) #:impersonator) any/c void?)) (get-command (-> any/c string?)) (get-editor-margin (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-file (-> any/c (or/c path? string? #f))) (get-level-2 (-> any/c boolean?)) (get-margin (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-mode (-> any/c (or/c (quote preview) (quote file) (quote printer)))) (get-orientation (-> any/c (or/c (quote portrait) (quote landscape)))) (get-paper-name (-> any/c string?)) (get-preview-command (-> any/c string?)) (get-scaling (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (get-translation (-> any/c (box/c (and/c real? nonnegative?)) (box/c (and/c real? nonnegative?)) void?)) (set-command (-> any/c string? void?)) (set-editor-margin (-> any/c natural? natural? void?)) (set-file (-> any/c (or/c path? string? #f) void?)) (set-level-2 (-> any/c any/c void?)) (set-margin (-> any/c (and/c real? nonnegative?) (and/c real? nonnegative?) void?)) (set-mode (-> any/c (or/c (quote preview) (quote file) (quote printer)) void?)) (set-orientation (-> any/c (or/c (quote portrait) (quote landscape)) void?)) (set-paper-name (-> any/c string? void?)) (set-preview-command (-> any/c string? void?)) (set-scaling (-> any/c (and/c real? nonnegative?) (and/c real? nonnegative?) void?)) (set-translation (-> any/c real? real? void?)))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/plot-lib/plot/private/common/math.rkt" "no-negative-party" "(lib plot/private/common/math.rkt):466:9")
  6 ms
  (-> ivl? any)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/main.rkt" "no-negative-party" "pict-lib/pict/main.rkt:185:3")
  5.5 ms
  (->i ((w (and/c rational? (not/c negative?))) (h (and/c rational? (not/c negative?)))) (#:draw-border? (draw-border? any/c) #:color (color (or/c #f string? (is-a?/c color%))) #:border-color (border-color (or/c #f string? (is-a?/c color%))) #:border-width (border-width (or/c #f (and/c rational? (not/c negative?))))) #:pre (draw-border? border-color border-width) (if (not draw-border?) (and (or (unsupplied-arg? border-color) (not border-color)) (or (unsupplied-arg? border-width) (not border-width))) #t) (_ pict?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/pict-lib/pict/private/utils.rkt" "no-negative-party" "pict-lib/pict/private/utils.rkt:87:4")
  5.5 ms
  (->* (pict-convertible? pict-path? (-> pict? pict-path? (values number? number?)) pict-path? (-> pict? pict-path? (values number? number?))) ((or/c #f number?) (or/c #f string?) boolean? #:style (or/c #f symbol?)) pict?)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/share/pkgs/draw-lib/racket/draw.rkt" "no-negative-party" "draw-lib/racket/draw.rkt:92:19")
  5.5 ms
  linear-gradient%/c
