cpu time: 55941 real time: 55954 gc time: 506
Running time is 42.67% contracts
24090/56450 ms

("(interface for label-element-equal?)" "/users/ben_g/bnd-bench/suffixtree/cfg/structs.rkt" "structs.rkt:9:2")
  17910.5 ms
  (-> Any Any boolean?)
("(interface for node-children)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt")
  3264 ms
  (-> any/c (listof node?))
("/users/ben_g/bnd-bench/suffixtree/cfg/structs.rkt" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt:13:12")
  1219 ms
  (-> node? any)
("(interface for label-ref)" "/users/ben_g/bnd-bench/suffixtree/cfg/structs.rkt" "structs.rkt:11:2")
  696 ms
  (-> any/c any/c (or/c symbol? char?))
("(interface for node-up-label)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt")
  495 ms
  (-> any/c label?)
("(interface for node-parent)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt")
  183.5 ms
  (-> any/c (or/c #f node?))
("/users/ben_g/bnd-bench/suffixtree/cfg/lcs.rkt" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt:13:12")
  168 ms
  (-> node? any)
  (-> label? (or/c #f node?) (listof node?) (or/c #f node?) any)
("(/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt structs)" "(interface for make-node)" "typed-data.rkt:60:5")
  74.5 ms
  (-> any/c any/c any/c any/c node?)
("(interface for make-node)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt:19:5")
  37.5 ms
  (-> any/c any/c any/c any/c node?)
("(interface for sublabel)" "/users/ben_g/bnd-bench/suffixtree/cfg/structs.rkt" "structs.rkt:12:2")
  21.5 ms
  (->* (any/c any/c) (any/c) label?)
("(interface for vector->label)" "/users/ben_g/bnd-bench/suffixtree/cfg/lcs.rkt" "lcs.rkt:15:2")
  10.5 ms
  (-> (vectorof (or/c symbol? char?)) label?)
("(interface for make-label)" "/users/ben_g/bnd-bench/suffixtree/cfg/structs.rkt" "structs.rkt:8:2")
  5 ms
  (-> (or/c string? (vectorof (or/c symbol? char?))) label?)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/syntax/id-table.rkt" "no-negative-party" "(lib syntax/id-table.rkt)")
  5 ms
  (->* () (dict? #:phase (or/c #f exact-integer?)) immutable-bound-id-table?)
