cpu time: 109856 real time: 109883 gc time: 1047
Running time is 60.2% contracts
66471/110411 ms

("/users/ben_g/bnd-bench/suffixtree/cfg/label.rkt" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt:11:12")
  31556 ms
  (-> label? (vectorof (or/c symbol? char?)))
  (-> label? any)
("(interface for label-datum)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt")
  30131.5 ms
  (-> any/c (vectorof (or/c symbol? char?)))
("(interface for node-children)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt")
  1817 ms
  (-> any/c (listof node?))
("(interface for make-label)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt:17:5")
  1727.5 ms
  (-> (vectorof (or/c symbol? char?)) any/c any/c label?)
("/users/ben_g/bnd-bench/suffixtree/cfg/structs.rkt" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt:13:12")
  655 ms
  (-> node? any)
("(interface for node-up-label)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt")
  285 ms
  (-> any/c label?)
("(interface for node-parent)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt")
  86.5 ms
  (-> any/c (or/c #f node?))
("/users/ben_g/bnd-bench/suffixtree/cfg/label.rkt" "/users/ben_g/bnd-bench/suffixtree/cfg/lcs.rkt" "label.rkt:251:8")
  80.5 ms
  (-> label? label? boolean?)
("(/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt structs)" "(interface for make-node)" "typed-data.rkt:60:5")
  69.5 ms
  (-> any/c any/c any/c any/c node?)
("/users/ben_g/bnd-bench/suffixtree/cfg/label.rkt" "/users/ben_g/bnd-bench/suffixtree/cfg/lcs.rkt" "label.rkt:107:9")
  42.5 ms
  (-> label? index?)
("(interface for make-node)" "/users/ben_g/bnd-bench/suffixtree/cfg/typed-data.rkt" "typed-data.rkt:19:5")
  10 ms
  (-> any/c any/c any/c any/c node?)
("/users/ben_g/bnd-bench/suffixtree/cfg/label.rkt" "/users/ben_g/bnd-bench/suffixtree/cfg/lcs.rkt" "label.rkt:116:9")
  5 ms
  (-> label? exact-integer? (or/c symbol? char?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/syntax/id-table.rkt" "no-negative-party" "(lib syntax/id-table.rkt)")
  5 ms
  (->* () (dict? #:phase (or/c #f exact-integer?)) mutable-bound-id-table?)
