cpu time: 7981 real time: 7981 gc time: 167
Running time is 7.73% contracts
673/8702 ms

("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/data.rkt" "data.rkt:5:9")
  254.5 ms
  (-> block? real?)
("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/elim.rkt" "bset.rkt:61:9")
  162 ms
  (-> (listof block?) real? any)
("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/elim.rkt" "bset.rkt:66:9")
  136.5 ms
  (-> (listof block?) natural? any)
("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/elim.rkt" "bset.rkt:76:9")
  48 ms
  (-> (listof block?) (listof block?) any)
("/users/ben_g/utetris/cfg/data.rkt" "/users/ben_g/utetris/cfg/world.rkt" "data.rkt:10:9")
  30.5 ms
  (-> tetra? (listof block?) world?)
  (-> world? (listof block?))
("/users/ben_g/utetris/cfg/data.rkt" "/users/ben_g/utetris/cfg/world.rkt" "data.rkt:8:9")
  12 ms
  (-> tetra? (listof block?))
("/users/ben_g/utetris/cfg/data.rkt" "/users/ben_g/utetris/cfg/main.rkt" "data.rkt:10:9")
  11.5 ms
  (-> world? (listof block?))
("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/elim.rkt" "bset.rkt:41:9")
  6 ms
  (-> real? real? (listof block?) any)
("(interface for eliminate-full-rows)" "/users/ben_g/utetris/cfg/world.rkt" "world.rkt:21:3")
  6 ms
  (-> any/c (listof block?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/racket/dict.rkt" "no-negative-party" "<collects>/racket/dict.rkt:166:2")
  6 ms
  (struct-type-property/c (list/c (vector/c (->i ((d dict?) (k (d) (dict-key-contract d))) ((default any/c)) any) (or/c #f (->i ((d (dict-implements/c dict-set!)) (k (d) (dict-key-contract d)) (value (d) (dict-value-contract d))) (_r void?))) (or/c #f (->i ((d (dict-implements/c dict-set)) (k (d) (dict-key-contract d)) (value (d) (dict-value-contract d))) (_r dict?))) (or/c #f (->i ((d (dict-implements/c dict-remove!)) (k (d) (dict-key-contract d))) (_r void?))) (or/c #f (->i ((d (dict-implements/c dict-remove)) (k (d) (dict-key-contract d))) (_r dict?))) (-> dict? natural?) (->i ((d dict?)) (_r (d) (or/c #f (dict-iter-contract d)))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (or/c #f (dict-iter-contract d)))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (dict-key-contract d))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (dict-value-contract d))) #:immutable #t) (vector/c contract? contract? contract? (or/c #f (-> dict? contract?)) (or/c #f (-> dict? contract?)) (or/c #f (-> dict? contract?)) #:immutable #t)))
