cpu time: 8135 real time: 8135 gc time: 174
Running time is 5.73% contracts
508/8868 ms

("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/elim.rkt" "bset.rkt:61:9")
  158 ms
  (-> (listof block?) real? any)
("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/elim.rkt" "bset.rkt:66:9")
  158 ms
  (-> (listof block?) natural? any)
("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/elim.rkt" "bset.rkt:76:9")
  59 ms
  (-> (listof block?) (listof block?) any)
("(/users/ben_g/utetris/cfg/base-types.rkt world)" "(interface for world-blocks)" "base-types.rkt:162:5")
  43 ms
  (-> any/c (listof block?))
("/users/ben_g/utetris/cfg/base-types.rkt" "/users/ben_g/utetris/cfg/world.rkt" "base-types.rkt:13:12")
  24 ms
  (-> tetra? (listof block?) any)
("(/users/ben_g/utetris/cfg/base-types.rkt main)" "(interface for world-blocks)" "base-types.rkt:124:5")
  18.5 ms
  (-> any/c (listof block?))
("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/main.rkt" "bset.rkt:71:9")
  12.5 ms
  (-> (listof block?) any)
("/users/ben_g/utetris/cfg/bset.rkt" "/users/ben_g/utetris/cfg/world.rkt" "bset.rkt:76:9")
  12 ms
  (-> (listof block?) (listof block?) any)
("/users/ben_g/utetris/cfg/tetras.rkt" "/users/ben_g/utetris/cfg/world.rkt" "tetras.rkt:38:9")
  11.5 ms
  (-> tetra? (listof block?) any)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/syntax/id-table.rkt" "no-negative-party" "(lib syntax/id-table.rkt)")
  6 ms
  (->* (mutable-free-id-table? identifier? (-> any/c any/c)) (any/c) void?)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/racket/dict.rkt" "no-negative-party" "<collects>/racket/dict.rkt:166:2")
  5.5 ms
  (struct-type-property/c (list/c (vector/c (->i ((d dict?) (k (d) (dict-key-contract d))) ((default any/c)) any) (or/c #f (->i ((d (dict-implements/c dict-set!)) (k (d) (dict-key-contract d)) (value (d) (dict-value-contract d))) (_r void?))) (or/c #f (->i ((d (dict-implements/c dict-set)) (k (d) (dict-key-contract d)) (value (d) (dict-value-contract d))) (_r dict?))) (or/c #f (->i ((d (dict-implements/c dict-remove!)) (k (d) (dict-key-contract d))) (_r void?))) (or/c #f (->i ((d (dict-implements/c dict-remove)) (k (d) (dict-key-contract d))) (_r dict?))) (-> dict? natural?) (->i ((d dict?)) (_r (d) (or/c #f (dict-iter-contract d)))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (or/c #f (dict-iter-contract d)))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (dict-key-contract d))) (->i ((d dict?) (iter (d) (dict-iter-contract d))) (_r (d) (dict-value-contract d))) #:immutable #t) (vector/c contract? contract? contract? (or/c #f (-> dict? contract?)) (or/c #f (-> dict? contract?)) (or/c #f (-> dict? contract?)) #:immutable #t)))
