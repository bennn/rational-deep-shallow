cpu time: 10916 real time: 10916 gc time: 317
Running time is 44.49% contracts
5170/11620 ms

("/users/ben_g/usynth/cfg/data.rkt" "/users/ben_g/usynth/cfg/mixer.rkt" "data.rkt:8:10")
  1018.5 ms
  (-> Array? (-> (vectorof exact-integer?) any))
("/users/ben_g/usynth/cfg/array-struct.rkt" "/users/ben_g/usynth/cfg/array-transform.rkt" "array-struct.rkt:196:9")
  813 ms
  (-> (vectorof exact-integer?) (-> (vectorof exact-integer?) flonum?) any)
("/users/ben_g/usynth/cfg/array-struct.rkt" "/users/ben_g/usynth/cfg/mixer.rkt" "array-struct.rkt:196:9")
  730 ms
  (-> (vectorof exact-integer?) (-> (vectorof exact-integer?) flonum?) any)
("/users/ben_g/usynth/cfg/array-utils.rkt" "/users/ben_g/usynth/cfg/synth.rkt" "array-utils.rkt:152:9")
  637 ms
  (-> (vectorof exact-integer?) exact-integer? (vectorof exact-integer?) any)
("/users/ben_g/usynth/cfg/array-transform.rkt" "/users/ben_g/usynth/cfg/data.rkt" "data.rkt:8:10")
  614.5 ms
  (-> Array? (-> (vectorof exact-integer?) any))
("/users/ben_g/usynth/cfg/array-broadcast.rkt" "/users/ben_g/usynth/cfg/array-struct.rkt" "array-struct.rkt:196:9")
  346.5 ms
  (-> (vectorof exact-integer?) (-> (vectorof exact-integer?) flonum?) any)
("/users/ben_g/usynth/cfg/array-broadcast.rkt" "/users/ben_g/usynth/cfg/data.rkt" "data.rkt:8:10")
  331.5 ms
  (-> Array? (-> (vectorof exact-integer?) any))
  (-> Array? (vectorof exact-integer?))
("/users/ben_g/usynth/cfg/data.rkt" "/users/ben_g/usynth/cfg/synth.rkt" "data.rkt:8:10")
  319 ms
  (-> Array? (-> (vectorof exact-integer?) any))
  (-> Array? (vectorof exact-integer?))
("/users/ben_g/usynth/cfg/array-broadcast.rkt" "/users/ben_g/usynth/cfg/array-utils.rkt" "array-utils.rkt:143:9")
  301.5 ms
  (-> exact-integer? (-> (vectorof exact-integer?)))
("/users/ben_g/usynth/cfg/array-struct.rkt" "/users/ben_g/usynth/cfg/sequencer.rkt" "array-struct.rkt:221:9")
  53 ms
  (-> (vectorof exact-integer?) (-> (vectorof exact-integer?) flonum?) any)
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/racket/dict.rkt" "no-negative-party" "<collects>/racket/dict.rkt:279:2")
  5.5 ms
  (->* () #:rest (listof (or/c (quote dict-ref) (quote dict-set!) (quote dict-set) (quote dict-remove!) (quote dict-remove) (quote dict-count) (quote dict-iterate-first) (quote dict-iterate-next) (quote dict-iterate-key) (quote dict-iterate-value) (quote dict-has-key?) (quote dict-ref!) (quote dict-set*!) (quote dict-set*) (quote dict-update!) (quote dict-update) (quote dict-map) (quote dict-for-each) (quote dict-keys) (quote dict-values) (quote dict->list) (quote dict-copy) (quote dict-empty?) (quote dict-clear) (quote dict-clear!))) flat-contract?)
