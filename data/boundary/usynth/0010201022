cpu time: 8686 real time: 8686 gc time: 318
Running time is 34.71% contracts
3234/9316 ms

("(interface for unsafe-build-array)" "/users/ben_g/usynth/cfg/array-transform.rkt" "array-transform.rkt:12:3")
  802.5 ms
  (-> (vectorof exact-integer?) (-> (vectorof exact-integer?) any) Array?)
("/users/ben_g/usynth/cfg/array-transform.rkt" "/users/ben_g/usynth/cfg/data.rkt" "data.rkt:8:10")
  746.5 ms
  (-> Array? (-> (vectorof exact-integer?) flonum?))
("(interface for unsafe-array-proc)" "/users/ben_g/usynth/cfg/array-transform.rkt" "array-transform.rkt:10:3")
  705 ms
  (-> any/c (-> (vectorof exact-integer?) flonum?))
("(interface for next-indexes!)" "/users/ben_g/usynth/cfg/synth.rkt" "synth.rkt:15:3")
  519.5 ms
  (-> (vectorof exact-integer?) any/c (vectorof exact-integer?) void?)
("(interface for unsafe-array-proc)" "/users/ben_g/usynth/cfg/synth.rkt" "synth.rkt:20:3")
  366.5 ms
  (-> any/c (-> (vectorof exact-integer?) flonum?))
("/users/ben_g/usynth/cfg/main.rkt" "/users/ben_g/usynth/cfg/sequencer.rkt" "sequencer.rkt:70:9")
  29.5 ms
  (-> natural? (listof (cons/c (or/c natural? #f) natural?)) natural? (-> flonum? (-> (vectorof exact-integer?) flonum?)) Array?)
("/users/ben_g/usynth/cfg/main.rkt" "/users/ben_g/usynth/cfg/synth.rkt" "synth.rkt:98:8")
  23.5 ms
  (-> flonum? (-> (vectorof exact-integer?) flonum?))
("(interface for vector-copy-all)" "/users/ben_g/usynth/cfg/array-transform.rkt" "array-transform.rkt:20:3")
  17.5 ms
  (-> (vectorof exact-integer?) (vectorof exact-integer?))
("(interface for build-array)" "/users/ben_g/usynth/cfg/sequencer.rkt" "sequencer.rkt:7:3")
  11.5 ms
  (-> (vectorof exact-integer?) (-> (vectorof exact-integer?) any) Array?)
("(interface for array-shape)" "/users/ben_g/usynth/cfg/synth.rkt" "synth.rkt:19:3")
  6 ms
  (-> any/c (vectorof exact-integer?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/racket/dict.rkt" "no-negative-party" "<collects>/racket/dict.rkt:193:2")
  5.5 ms
  (->i ((d (dict-implements/c dict-set!))) #:rest (rst (d) (let ((key/c (dict-key-contract d)) (val/c (dict-value-contract d))) (letrec ((args/c ...)) (and/c even-length-list? args/c)))) (_r void?))
