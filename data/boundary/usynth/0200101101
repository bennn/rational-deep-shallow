cpu time: 11045 real time: 11045 gc time: 309
Running time is 42.82% contracts
5024/11733 ms

("/users/ben_g/usynth/cfg/array-struct.rkt" "/users/ben_g/usynth/cfg/data.rkt" "data.rkt:8:10")
  2711.5 ms
  (-> (vectorof exact-integer?) exact-integer? (box/c boolean?) (-> void?) (-> (vectorof exact-integer?) flonum?) any)
("/users/ben_g/usynth/cfg/array-struct.rkt" "/users/ben_g/usynth/cfg/mixer.rkt" "array-struct.rkt:196:9")
  781.5 ms
  (-> (vectorof exact-integer?) (-> (vectorof exact-integer?) flonum?) Array?)
("/users/ben_g/usynth/cfg/array-transform.rkt" "/users/ben_g/usynth/cfg/data.rkt" "data.rkt:8:10")
  709.5 ms
  (-> Array? (-> (vectorof exact-integer?) any))
("(interface for next-indexes!)" "/users/ben_g/usynth/cfg/synth.rkt" "synth.rkt:15:3")
  523 ms
  (-> (vectorof exact-integer?) any/c (vectorof exact-integer?) void?)
("/users/ben_g/usynth/cfg/array-broadcast.rkt" "/users/ben_g/usynth/cfg/data.rkt" "data.rkt:8:10")
  243 ms
  (-> Array? (-> (vectorof exact-integer?) any))
  (-> Array? (vectorof exact-integer?))
("(interface for sequence)" "/users/ben_g/usynth/cfg/main.rkt" "main.rkt:8:3")
  16.5 ms
  (-> any/c any/c any/c (-> flonum? (-> (vectorof exact-integer?) any)) Array?)
("(interface for unsafe-array-index->value-index)" "/users/ben_g/usynth/cfg/array-struct.rkt" "array-struct.rkt:9:3")
  16 ms
  (-> (vectorof exact-integer?) (vectorof exact-integer?) exact-integer?)
("/users/ben_g/usynth/cfg/array-struct.rkt" "/users/ben_g/usynth/cfg/data.rkt" "data.rkt:14:10")
  11 ms
  (-> (vectorof exact-integer?) exact-integer? (box/c boolean?) (-> void?) (-> (vectorof exact-integer?) flonum?) (-> (vectorof exact-integer?) any/c void?) (vectorof flonum?) any)
("(interface for array-shape-broadcast)" "/users/ben_g/usynth/cfg/mixer.rkt" "mixer.rkt:17:3")
  6 ms
  (->* ((listof (vectorof exact-integer?))) (any/c) (vectorof exact-integer?))
("/users/ben_g/rds-cloudlab/racket-8.6.0.2/collects/racket/dict.rkt" "no-negative-party" "<collects>/racket/dict.rkt:215:2")
  5.5 ms
  (->i ((d (dict-implements/c dict-set!)) (k (d) (dict-key-contract d)) (update (d) (-> (dict-value-contract d) (dict-value-contract d)))) ((default (d) (or/c (dict-value-contract d) (-> (dict-value-contract d))))) (_r void?))
