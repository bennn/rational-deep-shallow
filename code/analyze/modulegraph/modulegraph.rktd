;; This file was generated by the `with-cache` library on 2018-11-11
(((acquire dungeon forth fsm fsmoo gregor jpeg kcfa lnm mbta morsecode quadT quadU sieve snake suffixtree synth take5 tetris zombie zordoz)) (3) 0 () 0 () () (h - (equal) (kcfa c (c (u . "ai.rkt") c (u . "benv.rkt") c (u . "denotable.rkt") c (u . "structs.rkt") c (u . "time.rkt")) c (c (u . "benv.rkt") c (u . "structs.rkt")) c (c (u . "denotable.rkt") c (u . "benv.rkt") c (u . "structs.rkt") c (u . "time.rkt")) c (c (u . "main.rkt") c (u . "structs.rkt") c (u . "ui.rkt")) c (c (u . "structs.rkt")) c (c (u . "time.rkt") c (u . "benv.rkt") c (u . "structs.rkt")) c (c (u . "ui.rkt") c (u . "benv.rkt") c (u . "denotable.rkt") c (u . "structs.rkt") c (u . "ai.rkt") c (u . "time.rkt"))) (snake c (c (u . "collide.rkt") c (u . "data.rkt") c (u . "const.rkt")) c (c (u . "const.rkt") c (u . "data.rkt")) c (c (u . "cut-tail.rkt") c (u . "data.rkt")) c (c (u . "data.rkt")) c (c (u . "handlers.rkt") c (u . "motion.rkt") c (u . "collide.rkt") c (u . "data.rkt")) c (c (u . "main.rkt") c (u . "motion.rkt") c (u . "handlers.rkt") c (u . "data.rkt") c (u . "const.rkt")) c (c (u . "motion-help.rkt") c (u . "cut-tail.rkt") c (u . "data.rkt")) c (c (u . "motion.rkt") c (u . "motion-help.rkt") c (u . "data.rkt") c (u . "const.rkt"))) (suffixtree c (c (u . "data.rkt")) c (c (u . "label.rkt") c (u . "data.rkt")) c (c (u . "lcs.rkt") c (u . "label.rkt") c (u . "ukkonen.rkt") c (u . "data.rkt") c (u . "structs.rkt")) c (c (u . "main.rkt") c (u . "lcs.rkt")) c (c (u . "structs.rkt") c (u . "label.rkt") c (u . "data.rkt")) c (c (u . "ukkonen.rkt") c (u . "label.rkt") c (u . "data.rkt") c (u . "structs.rkt"))) (sieve c (c (u . "main.rkt") c (u . "streams.rkt")) c (c (u . "streams.rkt"))) (morsecode c (c (u . "levenshtein.rkt")) c (c (u . "main.rkt") c (u . "levenshtein.rkt") c (u . "morse-code-strings.rkt")) c (c (u . "morse-code-strings.rkt") c (u . "morse-code-table.rkt")) c (c (u . "morse-code-table.rkt"))) (take5 c (c (u . "basics.rkt")) c (c (u . "card-pool.rkt") c (u . "../base/untyped.rkt") c (u . "card.rkt") c (u . "basics.rkt")) c (c (u . "card.rkt") c (u . "../base/untyped.rkt")) c (c (u . "dealer.rkt") c (u . "player.rkt") c (u . "card.rkt") c (u . "basics.rkt") c (u . "card-pool.rkt") c (u . "deck.rkt")) c (c (u . "deck.rkt") c (u . "../base/untyped.rkt") c (u . "card.rkt") c (u . "stack.rkt") c (u . "basics.rkt")) c (c (u . "main.rkt") c (u . "../base/untyped.rkt") c (u . "dealer.rkt") c (u . "player.rkt")) c (c (u . "player.rkt") c (u . "card.rkt")) c (c (u . "stack.rkt") c (u . "../base/untyped.rkt") c (u . "card.rkt"))) (quadT c (c (u . "hyphenate.rkt") c (u . "../base/untyped.rkt")) c (c (u . "main.rkt") c (u . "world.rkt") c (u . "quad-main.rkt") c (u . "quick-sample.rkt") c (u . "render.rkt")) c (c (u . "measure.rkt")) c (c (u . "ocm-struct.rkt") c (u . "../base/untyped.rkt")) c (c (u . "ocm.rkt") c (u . "../base/untyped.rkt") c (u . "ocm-struct.rkt")) c (c (u . "penalty-struct.rkt")) c (c (u . "quad-main.rkt") c (u . "wrap.rkt") c (u . "world.rkt") c (u . "utils.rkt") c (u . "../base/csp/csp.rkt") c (u . "quads.rkt") c (u . "../base/untyped.rkt") c (u . "../base/untyped-predicates.rkt") c (u . "measure.rkt") c (u . "sugar-list.rkt")) c (c (u . "quads.rkt") c (u . "../base/untyped.rkt") c (u . "../base/untyped-predicates.rkt")) c (c (u . "quick-sample.rkt") c (u . "quads.rkt")) c (c (u . "render.rkt") c (u . "world.rkt") c (u . "utils.rkt") c (u . "quads.rkt") c (u . "../base/untyped.rkt") c (u . "../base/untyped-predicates.rkt")) c (c (u . "sugar-list.rkt")) c (c (u . "utils.rkt") c (u . "world.rkt") c (u . "quads.rkt") c (u . "../base/untyped.rkt") c (u . "../base/untyped-predicates.rkt") c (u . "measure.rkt") c (u . "hyphenate.rkt")) c (c (u . "world.rkt")) c (c (u . "wrap.rkt") c (u . "world.rkt") c (u . "utils.rkt") c (u . "quads.rkt") c (u . "penalty-struct.rkt") c (u . "../base/untyped.rkt") c (u . "../base/untyped-predicates.rkt") c (u . "measure.rkt") c (u . "ocm.rkt") c (u . "sugar-list.rkt") c (u . "ocm-struct.rkt"))) (fsmoo c (c (u . "automata.rkt")) c (c (u . "main.rkt") c (u . "population.rkt") c (u . "utilities.rkt")) c (c (u . "population.rkt") c (u . "automata.rkt") c (u . "utilities.rkt")) c (c (u . "utilities.rkt"))) (quadU c (c (u . "hyphenate.rkt")) c (c (u . "main.rkt") c (u . "world.rkt") c (u . "quad-main.rkt") c (u . "../base/quad-types.rkt") c (u . "quick-sample.rkt") c (u . "render.rkt")) c (c (u . "measure.rkt")) c (c (u . "ocm-struct.rkt")) c (c (u . "ocm.rkt") c (u . "ocm-struct.rkt")) c (c (u . "penalty-struct.rkt")) c (c (u . "quad-main.rkt") c (u . "sugar-list.rkt") c (u . "world.rkt") c (u . "../base/quad-types.rkt") c (u . "measure.rkt") c (u . "quads.rkt") c (u . "wrap.rkt") c (u . "../base/csp/csp.rkt") c (u . "utils.rkt")) c (c (u . "quads.rkt") c (u . "../base/quad-types.rkt")) c (c (u . "quick-sample.rkt") c (u . "quads.rkt")) c (c (u . "render.rkt") c (u . "world.rkt") c (u . "quads.rkt") c (u . "utils.rkt")) c (c (u . "sugar-list.rkt")) c (c (u . "utils.rkt") c (u . "hyphenate.rkt") c (u . "world.rkt") c (u . "../base/quad-types.rkt") c (u . "measure.rkt") c (u . "quads.rkt")) c (c (u . "world.rkt")) c (c (u . "wrap.rkt") c (u . "sugar-list.rkt") c (u . "ocm.rkt") c (u . "world.rkt") c (u . "penalty-struct.rkt") c (u . "measure.rkt") c (u . "quads.rkt") c (u . "ocm-struct.rkt") c (u . "utils.rkt"))) (mbta c (c (u . "main.rkt") c (u . "run-t.rkt")) c (c (u . "run-t.rkt") c (u . "t-view.rkt")) c (c (u . "t-graph.rkt") c (u . "../base/my-graph.rkt")) c (c (u . "t-view.rkt") c (u . "t-graph.rkt"))) (acquire c (c (u . "admin.rkt") c (u . "tree.rkt") c (u . "state.rkt") c (u . "board.rkt") c (u . "basics.rkt") c (u . "../base/untyped.rkt")) c (c (u . "auxiliaries.rkt")) c (c (u . "basics.rkt") c (u . "auxiliaries.rkt") c (u . "../base/untyped.rkt")) c (c (u . "board.rkt") c (u . "auxiliaries.rkt") c (u . "basics.rkt") c (u . "../base/untyped.rkt")) c (c (u . "main.rkt") c (u . "admin.rkt") c (u . "state.rkt") c (u . "board.rkt") c (u . "auxiliaries.rkt") c (u . "player.rkt")) c (c (u . "player.rkt") c (u . "strategy.rkt") c (u . "admin.rkt") c (u . "state.rkt") c (u . "basics.rkt") c (u . "../base/untyped.rkt")) c (c (u . "state.rkt") c (u . "board.rkt") c (u . "auxiliaries.rkt") c (u . "basics.rkt") c (u . "../base/untyped.rkt")) c (c (u . "strategy.rkt") c (u . "state.rkt") c (u . "board.rkt") c (u . "auxiliaries.rkt") c (u . "basics.rkt") c (u . "../base/untyped.rkt")) c (c (u . "tree.rkt") c (u . "state.rkt") c (u . "board.rkt") c (u . "basics.rkt") c (u . "../base/untyped.rkt"))) (lnm c (c (u . "bitstring.rkt")) c (c (u . "lnm-plot.rkt") c (u . "summary.rkt") c (u . "bitstring.rkt")) c (c (u . "main.rkt") c (u . "spreadsheet.rkt") c (u . "summary.rkt") c (u . "lnm-plot.rkt")) c (c (u . "modulegraph.rkt")) c (c (u . "spreadsheet.rkt") c (u . "bitstring.rkt")) c (c (u . "summary.rkt") c (u . "bitstring.rkt") c (u . "modulegraph.rkt"))) (dungeon c (c (u . "cell.rkt") c (u . "message-queue.rkt") c (u . "../base/un-types.rkt")) c (c (u . "grid.rkt") c (u . "../base/un-types.rkt") c (u . "cell.rkt")) c (c (u . "main.rkt") c (u . "utils.rkt") c (u . "grid.rkt") c (u . "../base/un-types.rkt") c (u . "cell.rkt")) c (c (u . "message-queue.rkt")) c (c (u . "utils.rkt"))) (fsm c (c (u . "automata.rkt")) c (c (u . "main.rkt") c (u . "automata.rkt") c (u . "utilities.rkt") c (u . "population.rkt")) c (c (u . "population.rkt") c (u . "automata.rkt") c (u . "utilities.rkt")) c (c (u . "utilities.rkt"))) (forth c (c (u . "command.rkt") c (u . "stack.rkt")) c (c (u . "eval.rkt") c (u . "stack.rkt") c (u . "command.rkt")) c (c (u . "main.rkt") c (u . "eval.rkt")) c (c (u . "stack.rkt"))) (synth c (c (u . "array-broadcast.rkt") c (u . "data.rkt") c (u . "array-struct.rkt") c (u . "array-utils.rkt")) c (c (u . "array-struct.rkt") c (u . "data.rkt") c (u . "array-utils.rkt")) c (c (u . "array-transform.rkt") c (u . "data.rkt") c (u . "array-broadcast.rkt") c (u . "array-struct.rkt") c (u . "array-utils.rkt")) c (c (u . "array-utils.rkt")) c (c (u . "data.rkt")) c (c (u . "drum.rkt") c (u . "data.rkt") c (u . "synth.rkt") c (u . "array-struct.rkt") c (u . "array-utils.rkt") c (u . "array-transform.rkt")) c (c (u . "main.rkt") c (u . "synth.rkt") c (u . "mixer.rkt") c (u . "sequencer.rkt") c (u . "drum.rkt")) c (c (u . "mixer.rkt") c (u . "array-broadcast.rkt") c (u . "array-struct.rkt")) c (c (u . "sequencer.rkt") c (u . "synth.rkt") c (u . "mixer.rkt") c (u . "array-struct.rkt") c (u . "array-transform.rkt")) c (c (u . "synth.rkt") c (u . "array-struct.rkt") c (u . "array-utils.rkt"))) (gregor c (c (u . "clock.rkt") c (u . "gregor-structs.rkt") c (u . "moment.rkt") c (u . "datetime.rkt")) c (c (u . "core-structs.rkt")) c (c (u . "date.rkt") c (u . "gregor-structs.rkt") c (u . "ymd.rkt") c (u . "core-structs.rkt")) c (c (u . "datetime.rkt") c (u . "time.rkt") c (u . "hmsn.rkt") c (u . "gregor-structs.rkt") c (u . "date.rkt") c (u . "core-structs.rkt")) c (c (u . "difference.rkt") c (u . "hmsn.rkt") c (u . "gregor-structs.rkt") c (u . "datetime.rkt") c (u . "ymd.rkt") c (u . "date.rkt") c (u . "core-structs.rkt")) c (c (u . "gregor-structs.rkt") c (u . "core-structs.rkt")) c (c (u . "hmsn.rkt") c (u . "core-structs.rkt")) c (c (u . "main.rkt") c (u . "time.rkt") c (u . "gregor-structs.rkt") c (u . "moment.rkt") c (u . "clock.rkt") c (u . "datetime.rkt") c (u . "difference.rkt") c (u . "date.rkt")) c (c (u . "moment-base.rkt") c (u . "gregor-structs.rkt") c (u . "datetime.rkt")) c (c (u . "moment.rkt") c (u . "hmsn.rkt") c (u . "gregor-structs.rkt") c (u . "offset-resolvers.rkt") c (u . "datetime.rkt") c (u . "moment-base.rkt") c (u . "../base/tzinfo/main.rkt")) c (c (u . "offset-resolvers.rkt") c (u . "hmsn.rkt") c (u . "gregor-structs.rkt") c (u . "datetime.rkt") c (u . "moment-base.rkt") c (u . "../base/tzinfo/main.rkt") c (u . "core-structs.rkt")) c (c (u . "time.rkt") c (u . "hmsn.rkt") c (u . "gregor-structs.rkt") c (u . "core-structs.rkt")) c (c (u . "ymd.rkt") c (u . "core-structs.rkt"))) (jpeg c (c (u . "bit-ports.rkt") c (u . "../base/untyped.rkt")) c (c (u . "exif.rkt") c (u . "../base/untyped.rkt")) c (c (u . "huffman.rkt") c (u . "../base/untyped.rkt") c (u . "bit-ports.rkt")) c (c (u . "jfif.rkt") c (u . "../base/untyped.rkt") c (u . "../base/math/array.rkt") c (u . "huffman.rkt") c (u . "bit-ports.rkt")) c (c (u . "main.rkt") c (u . "exif.rkt") c (u . "../base/untyped.rkt") c (u . "jfif.rkt"))) (tetris c (c (u . "aux.rkt") c (u . "tetras.rkt") c (u . "data.rkt")) c (c (u . "block.rkt") c (u . "data.rkt")) c (c (u . "bset.rkt") c (u . "consts.rkt") c (u . "block.rkt") c (u . "data.rkt")) c (c (u . "consts.rkt")) c (c (u . "data.rkt")) c (c (u . "elim.rkt") c (u . "bset.rkt") c (u . "consts.rkt") c (u . "data.rkt")) c (c (u . "main.rkt") c (u . "bset.rkt") c (u . "world.rkt") c (u . "data.rkt") c (u . "aux.rkt")) c (c (u . "tetras.rkt") c (u . "bset.rkt") c (u . "consts.rkt") c (u . "block.rkt") c (u . "data.rkt")) c (c (u . "world.rkt") c (u . "bset.rkt") c (u . "tetras.rkt") c (u . "consts.rkt") c (u . "data.rkt") c (u . "aux.rkt") c (u . "elim.rkt"))) (zordoz c (c (u . "main.rkt") c (u . "zo-shell.rkt")) c (c (u . "zo-find.rkt") c (u . "zo-transition.rkt") c (u . "zo-string.rkt") c (u . "../base/compiler-zo-structs.rkt")) c (c (u . "zo-shell.rkt") c (u . "zo-find.rkt") c (u . "../base/compiler-zo-parse.rkt") c (u . "zo-transition.rkt") c (u . "zo-string.rkt")) c (c (u . "zo-string.rkt") c (u . "../base/typed-zo-structs.rkt")) c (c (u . "zo-transition.rkt") c (u . "../base/typed-zo-structs.rkt"))) (zombie c (c (u . "image.rkt")) c (c (u . "main.rkt") c (u . "zombie.rkt")) c (c (u . "math.rkt")) c (c (u . "zombie.rkt") c (u . "math.rkt") c (u . "image.rkt")))))
